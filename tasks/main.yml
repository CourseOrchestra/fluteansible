---
- name: install needed packages
  apt:
    update_cache: true
    name: [jsvc, unzip]

- name: download jython installer
  get_url:
    url: "{{ jython_url }}"
    dest: /opt/jython-installer.jar

- name: install jython
  command: java -jar jython-installer.jar -s -d /opt/jython
  args:
    chdir: /opt
    creates: /opt/jython

- name: create symlink to jython executable
  file:
    dest: "{{ item }}"
    src: /opt/jython/bin/jython
    state: link
  with_items:
    - /usr/local/bin/jython
    - /usr/local/share/jython
    - /usr/bin/jython

- name: app users group
  group:
    name: "{{ flute_group }}"
    state: present

- name: flute3 user
  user:
    name: "{{ flute_user }}"
    group: "{{ flute_group }}"
    shell: /bin/false

- name: mkdir for flute
  file:
    dest: "{{ item }}"
    state: directory
    mode: 0775
    owner: "{{ flute_user }}"
  with_items:
    - "{{ flute_dir }}"
    - "{{ flute_dir }}/lib"
    - /var/opt/flute/score
    - /var/log/flute

- name: download flute jar
  get_url:
    url: "{{ flute_url }}"
    dest: "{{ flute_dir }}/flute-{{ flute_version }}.jar"
    mode: "0644"
    owner: "{{ flute_user }}"

- name: create symlink
  file:
    dest: "{{ flute_dir }}/flute.jar"
    src: "{{ flute_dir }}/flute-{{ flute_version }}.jar"
    state: link

- name: get and unarchive flute archive
  unarchive:
    src: "{{ flute_lib_url }}"
    dest: "{{ flute_dir }}/lib"
    remote_src: true
    group: "{{ flute_group }}"
    creates: "{{ flute_dir }}/lib/*.jar"

- name: copy flute service config file
  template:
    src: "templates/flute.j2"
    dest: "/etc/systemd/system/flute.service"
    mode: "0644"

- name: Ensure flute runs on startup
  systemd:
    name: flute
    enabled: true
  when: ansible_connection != 'docker'
